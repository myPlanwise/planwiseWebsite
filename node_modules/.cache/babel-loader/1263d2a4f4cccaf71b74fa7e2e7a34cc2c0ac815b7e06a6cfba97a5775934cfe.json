{"ast":null,"code":"var _jsxFileName = \"/Users/jennifer/Documents/codingProjects/myPlanwise/myPlanwiseWebsite/myplanwise-website/src/Components/InputForm.js\",\n  _s = $RefreshSig$();\n// this component is for the user to input their monthly expenses and income in the form. It displays in the main component\n\n// create a form for the user to input their monthly expenses and income\n// the form will have two columns: one for expenses and one for income\n// the user will be able to add the name and the $ amount for each expense/income\n// the input will be saved in the state and displayed on the screen\n// the input can be edited or deleted\n// the input will be saved in the database to be used in the budget results component\n\n// TODO: create a custom hook to handle the input form for expenses and income\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = () => {\n  _s();\n  // create state for the input form\n  const [input, setInput] = useState({\n    expenseName: \"\",\n    expenseAmount: \"\",\n    incomeName: \"\",\n    incomeAmount: \"\"\n  });\n\n  // create state for the expense list\n  const [expenseList, setExpenseList] = useState([]);\n\n  // create state for the income list\n  const [incomeList, setIncomeList] = useState([]);\n\n  // create a function to handle the input form\n  const handleInput = e => {\n    // console.log(e.target.value);\n    // console.log(e.target.name);\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // create a function to handle the expense list\n  const handleExpenseList = e => {\n    e.preventDefault();\n    // console.log(input.expenseName);\n    // console.log(input.expenseAmount);\n    setExpenseList([...expenseList, {\n      expenseName: input.expenseName,\n      expenseAmount: input.expenseAmount\n    }]);\n    setInput({\n      ...input,\n      expenseName: \"\",\n      expenseAmount: \"\"\n    });\n  };\n\n  // create a function to handle the income list\n  const handleIncomeList = e => {\n    e.preventDefault();\n    // console.log(input.incomeName);\n    // console.log(input.incomeAmount);\n    setIncomeList([...incomeList, {\n      incomeName: input.incomeName,\n      incomeAmount: input.incomeAmount\n    }]);\n    setInput({\n      ...input,\n      incomeName: \"\",\n      incomeAmount: \"\"\n    });\n  };\n\n  // useEffect when input is submitted to the expense list the new expense amount is added to the total expense amount and displayed in the total expense amount section, total difference between the total income and total expense is displayed in the total difference section, total percentage of the total expense compared to the total income is displayed in the total percentage section, total percentage of the total income compared to the total expense is displayed in the total percentage section\n\n  // const [totalExpense, setTotalExpense] = useState(0);\n  // const [totalIncome, setTotalIncome] = useState(0);\n  // const [totalDifference, setTotalDifference] = useState(0);\n  // const [totalExpensePercentage, setTotalExpensePercentage] = useState(0);\n  // const [totalIncomePercentage, setTotalIncomePercentage] = useState(0);\n\n  // useEffect(() => {\n  //   let expenseTotal = 0;\n  //   let incomeTotal = 0;\n  //   let differenceTotal = 0;\n  //   let expensePercentageTotal = 0;\n  //   let incomePercentageTotal = 0;\n\n  //   expenseList.forEach((expense) => {\n  //     expenseTotal += parseInt(expense.expenseAmount);\n  //   });\n  //   setTotalExpense(expenseTotal);\n\n  //   incomeList.forEach((income) => {\n  //     incomeTotal += parseInt(income.incomeAmount);\n  //   });\n  //   setTotalIncome(incomeTotal);\n\n  //   differenceTotal = incomeTotal - expenseTotal;\n  //   setTotalDifference(differenceTotal);\n\n  //   expensePercentageTotal = (expenseTotal / incomeTotal) * 100;\n  //   setTotalExpensePercentage(expensePercentageTotal);\n\n  //   incomePercentageTotal = (incomeTotal / expenseTotal) * 100;\n  //   setTotalIncomePercentage(incomePercentageTotal);\n  // }, [expenseList, incomeList]);\n\n  // // create a function to add the expenses together to get the total expenses\n  // const totalExpenses = () => {\n  //   let total = 0;\n  //   for (let i = 0; i < expenseList.length; i++) {\n  //     total += parseInt(expenseList[i].expenseAmount);\n  //   }\n  //   return total;\n  // };\n\n  // // create a function to add the income together to get the total income\n  // const totalIncome = () => {\n  //   let total = 0;\n  //   for (let i = 0; i < incomeList.length; i++) {\n  //     total += parseInt(incomeList[i].incomeAmount);\n  //   }\n  //   return total;\n  // };\n\n  // // create a function to get the difference between the total income and total expenses\n  // const difference = () => {\n  //   return totalIncome() - totalExpenses();\n  // };\n\n  // // create a function to get the percentage of the total expenses compared to the total income\n  // const expensePercentage = () => {\n  //   return (totalExpenses() / totalIncome()) * 100;\n  // };\n\n  // create a function to delete an expense\n  const deleteExpense = index => {\n    // console.log(index);\n    const newExpenseList = [...expenseList];\n    newExpenseList.splice(index, 1);\n    setExpenseList(newExpenseList);\n  };\n\n  // create a function to delete an income\n  const deleteIncome = index => {\n    // console.log(index);\n    const newIncomeList = [...incomeList];\n    newIncomeList.splice(index, 1);\n    setIncomeList(newIncomeList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-form-expense\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleExpenseList,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"expenseName\",\n            placeholder: \"Expense Name\",\n            value: input.expenseName,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"expenseAmount\",\n            placeholder: \"Expense Amount\",\n            value: input.expenseAmount,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-list\",\n          children: expenseList.map((expense, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: expense.expenseName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"$\", expense.expenseAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteExpense(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-form-income\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleIncomeList,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"incomeName\",\n            placeholder: \"Income Name\",\n            value: input.incomeName,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"incomeAmount\",\n            placeholder: \"Income Amount\",\n            value: input.incomeAmount,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"income-list\",\n          children: incomeList.map((income, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"income-list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: income.incomeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"$\", income.incomeAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteIncome(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-expense\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalExpense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-income\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalIncome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-difference\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Difference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalDifference]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-expense-percentage\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Expense Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalExpensePercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-income-percentage\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Income Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalIncomePercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(InputForm, \"oNohtSdfhGMtYxO2R9I+EFmtg4U=\");\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useEffect","useState","Link","InputForm","input","setInput","expenseName","expenseAmount","incomeName","incomeAmount","expenseList","setExpenseList","incomeList","setIncomeList","handleInput","e","target","name","value","handleExpenseList","preventDefault","handleIncomeList","deleteExpense","index","newExpenseList","splice","deleteIncome","newIncomeList","map","expense","income","totalExpense","totalIncome","totalDifference","totalExpensePercentage","totalIncomePercentage"],"sources":["/Users/jennifer/Documents/codingProjects/myPlanwise/myPlanwiseWebsite/myplanwise-website/src/Components/InputForm.js"],"sourcesContent":["// this component is for the user to input their monthly expenses and income in the form. It displays in the main component\n\n// create a form for the user to input their monthly expenses and income\n// the form will have two columns: one for expenses and one for income\n// the user will be able to add the name and the $ amount for each expense/income\n// the input will be saved in the state and displayed on the screen\n// the input can be edited or deleted\n// the input will be saved in the database to be used in the budget results component\n\n// TODO: create a custom hook to handle the input form for expenses and income\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst InputForm = () => {\n  // create state for the input form\n  const [input, setInput] = useState({\n    expenseName: \"\",\n    expenseAmount: \"\",\n    incomeName: \"\",\n    incomeAmount: \"\",\n  });\n\n  // create state for the expense list\n  const [expenseList, setExpenseList] = useState([]);\n\n  // create state for the income list\n  const [incomeList, setIncomeList] = useState([]);\n\n  // create a function to handle the input form\n  const handleInput = (e) => {\n    // console.log(e.target.value);\n    // console.log(e.target.name);\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // create a function to handle the expense list\n  const handleExpenseList = (e) => {\n    e.preventDefault();\n    // console.log(input.expenseName);\n    // console.log(input.expenseAmount);\n    setExpenseList([\n      ...expenseList,\n      {\n        expenseName: input.expenseName,\n        expenseAmount: input.expenseAmount,\n      },\n    ]);\n    setInput({\n      ...input,\n      expenseName: \"\",\n      expenseAmount: \"\",\n    });\n  };\n\n  // create a function to handle the income list\n  const handleIncomeList = (e) => {\n    e.preventDefault();\n    // console.log(input.incomeName);\n    // console.log(input.incomeAmount);\n    setIncomeList([\n      ...incomeList,\n      {\n        incomeName: input.incomeName,\n        incomeAmount: input.incomeAmount,\n      },\n    ]);\n    setInput({\n      ...input,\n      incomeName: \"\",\n      incomeAmount: \"\",\n    });\n  };\n\n// useEffect when input is submitted to the expense list the new expense amount is added to the total expense amount and displayed in the total expense amount section, total difference between the total income and total expense is displayed in the total difference section, total percentage of the total expense compared to the total income is displayed in the total percentage section, total percentage of the total income compared to the total expense is displayed in the total percentage section\n\n// const [totalExpense, setTotalExpense] = useState(0);\n// const [totalIncome, setTotalIncome] = useState(0);\n// const [totalDifference, setTotalDifference] = useState(0);\n// const [totalExpensePercentage, setTotalExpensePercentage] = useState(0);\n// const [totalIncomePercentage, setTotalIncomePercentage] = useState(0);\n\n// useEffect(() => {\n//   let expenseTotal = 0;\n//   let incomeTotal = 0;\n//   let differenceTotal = 0;\n//   let expensePercentageTotal = 0;\n//   let incomePercentageTotal = 0;\n\n//   expenseList.forEach((expense) => {\n//     expenseTotal += parseInt(expense.expenseAmount);\n//   });\n//   setTotalExpense(expenseTotal);\n\n//   incomeList.forEach((income) => {\n//     incomeTotal += parseInt(income.incomeAmount);\n//   });\n//   setTotalIncome(incomeTotal);\n\n//   differenceTotal = incomeTotal - expenseTotal;\n//   setTotalDifference(differenceTotal);\n\n//   expensePercentageTotal = (expenseTotal / incomeTotal) * 100;\n//   setTotalExpensePercentage(expensePercentageTotal);\n\n//   incomePercentageTotal = (incomeTotal / expenseTotal) * 100;\n//   setTotalIncomePercentage(incomePercentageTotal);\n// }, [expenseList, incomeList]);\n\n  // // create a function to add the expenses together to get the total expenses\n  // const totalExpenses = () => {\n  //   let total = 0;\n  //   for (let i = 0; i < expenseList.length; i++) {\n  //     total += parseInt(expenseList[i].expenseAmount);\n  //   }\n  //   return total;\n  // };\n\n  // // create a function to add the income together to get the total income\n  // const totalIncome = () => {\n  //   let total = 0;\n  //   for (let i = 0; i < incomeList.length; i++) {\n  //     total += parseInt(incomeList[i].incomeAmount);\n  //   }\n  //   return total;\n  // };\n\n  // // create a function to get the difference between the total income and total expenses\n  // const difference = () => {\n  //   return totalIncome() - totalExpenses();\n  // };\n\n  // // create a function to get the percentage of the total expenses compared to the total income\n  // const expensePercentage = () => {\n  //   return (totalExpenses() / totalIncome()) * 100;\n  // };\n\n\n\n  // create a function to delete an expense\n  const deleteExpense = (index) => {\n    // console.log(index);\n    const newExpenseList = [...expenseList];\n    newExpenseList.splice(index, 1);\n    setExpenseList(newExpenseList);\n  };\n\n  // create a function to delete an income\n  const deleteIncome = (index) => {\n    // console.log(index);\n    const newIncomeList = [...incomeList];\n    newIncomeList.splice(index, 1);\n    setIncomeList(newIncomeList);\n  };\n\n  return (\n    <div className=\"input-form\">\n      <div className=\"input-form-container\">\n        <div className=\"input-form-expense\">\n          <h2>Expenses</h2>\n          <form onSubmit={handleExpenseList}>\n            <input\n              type=\"text\"\n              name=\"expenseName\"\n              placeholder=\"Expense Name\"\n              value={input.expenseName}\n              onChange={handleInput}\n            />\n            <input\n              type=\"number\"\n              name=\"expenseAmount\"\n              placeholder=\"Expense Amount\"\n              value={input.expenseAmount}\n              onChange={handleInput}\n            />\n            <button type=\"submit\">Add Expense</button>\n          </form>\n          <div className=\"expense-list\">\n            {expenseList.map((expense, index) => {\n              return (\n                <div className=\"expense-list-item\" key={index}>\n                  <p>{expense.expenseName}</p>\n                  <p>${expense.expenseAmount}</p>\n                  <button onClick={() => deleteExpense(index)}>X</button>\n                </div>\n              );\n            }\n            )}\n          </div>\n        </div>\n        <div className=\"input-form-income\">\n          <h2>Income</h2>\n          <form onSubmit={handleIncomeList}>\n            <input\n              type=\"text\"\n              name=\"incomeName\"\n              placeholder=\"Income Name\"\n              value={input.incomeName}\n              onChange={handleInput}\n            />\n            <input\n              type=\"number\"\n              name=\"incomeAmount\"\n              placeholder=\"Income Amount\"\n              value={input.incomeAmount}\n              onChange={handleInput}\n            />\n            <button type=\"submit\">Add Income</button>\n          </form>\n          <div className=\"income-list\">\n            {incomeList.map((income, index) => {\n              return (\n                <div className=\"income-list-item\" key={index}>\n                  <p>{income.incomeName}</p>\n                  <p>${income.incomeAmount}</p>\n                  <button onClick={() => deleteIncome(index)}>X</button>\n                </div>\n              );\n            }\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"total-section\">\n        <div className=\"total-expense\">\n          <h2>Total Expenses</h2>\n          <p>${totalExpense}</p>\n        </div>\n        <div className=\"total-income\">\n          <h2>Total Income</h2>\n          <p>${totalIncome}</p>\n        </div>\n        <div className=\"total-difference\">\n          <h2>Difference</h2>\n          <p>${totalDifference}</p>\n        </div>\n        <div className=\"total-expense-percentage\">\n          <h2>Expense Percentage</h2>\n          <p>{totalExpensePercentage}%</p>\n        </div>\n        <div className=\"total-income-percentage\">\n          <h2>Income Percentage</h2>\n          <p>{totalIncomePercentage}%</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}